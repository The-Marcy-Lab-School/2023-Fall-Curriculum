The text below illustrates a common workflow for creating a git repository using the git init command. Read through this carefully to fully understand what each command does.


ben:~/environment $ git config --global push.default current
ben:~/environment $ cd unit-0/
ben:~/environment/unit-0 $ mkdir localRepoTest
ben:~/environment/unit-0 $ cd localRepoTest/
ben:~/environment/unit-0/localRepoTest $ git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint: 
hint:   git config --global init.defaultBranch <name>
hint: 
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint: 
hint:   git branch -m <name>
Initialized empty Git repository in /home/ec2-user/environment/unit-0/localRepoTest/.git/
ben:~/environment/unit-0/localRepoTest (master) $ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)
ben:~/environment/unit-0/localRepoTest (master) $ touch README.md
ben:~/environment/unit-0/localRepoTest (master) $ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        README.md

nothing added to commit but untracked files present (use "git add" to track)
ben:~/environment/unit-0/localRepoTest (master) $ git add -A
ben:~/environment/unit-0/localRepoTest (master) $ git commit -m "Added README.md"
[master (root-commit) 542fd80] Added README.md
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 README.md
ben:~/environment/unit-0/localRepoTest (master) $ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

ben:~/environment/unit-0/localRepoTest (master) $ git remote add origin git@github.com:benspector-mls/remoteRepoTest.git
ben:~/environment/unit-0/localRepoTest (master) $ git branch
* master
ben:~/environment/unit-0/localRepoTest (master) $ git branch -m main
ben:~/environment/unit-0/localRepoTest (main) $ git push
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 225 bytes | 225.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:benspector-mls/remoteRepoTest.git
 * [new branch]      main -> main
ben:~/environment/unit-0/localRepoTest (main) $ git config
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <type>     value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry

ben:~/environment/unit-0/localRepoTest (main) $ ls -a
.  ..  .git  README.md
ben:~/environment/unit-0/localRepoTest (main) $ ls .git/
branches  COMMIT_EDITMSG  config  description  HEAD  hooks  index  info  logs  objects  refs
ben:~/environment/unit-0/localRepoTest (main) $ cat .git/config
[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote "origin"]
        url = git@github.com:benspector-mls/remoteRepoTest.git
        fetch = +refs/heads/*:refs/remotes/origin/*